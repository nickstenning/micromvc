/* automatically generated by JSCoverage - do not edit */
if (! top._$jscoverage) {
  top._$jscoverage = {};
}
var _$jscoverage = top._$jscoverage;
if (! _$jscoverage['lib/controller.js']) {
  _$jscoverage['lib/controller.js'] = [];
  _$jscoverage['lib/controller.js'][1] = 0;
  _$jscoverage['lib/controller.js'][3] = 0;
  _$jscoverage['lib/controller.js'][10] = 0;
  _$jscoverage['lib/controller.js'][11] = 0;
  _$jscoverage['lib/controller.js'][17] = 0;
  _$jscoverage['lib/controller.js'][18] = 0;
  _$jscoverage['lib/controller.js'][19] = 0;
  _$jscoverage['lib/controller.js'][20] = 0;
  _$jscoverage['lib/controller.js'][21] = 0;
  _$jscoverage['lib/controller.js'][22] = 0;
  _$jscoverage['lib/controller.js'][23] = 0;
  _$jscoverage['lib/controller.js'][26] = 0;
  _$jscoverage['lib/controller.js'][27] = 0;
  _$jscoverage['lib/controller.js'][28] = 0;
  _$jscoverage['lib/controller.js'][29] = 0;
  _$jscoverage['lib/controller.js'][35] = 0;
  _$jscoverage['lib/controller.js'][36] = 0;
  _$jscoverage['lib/controller.js'][39] = 0;
  _$jscoverage['lib/controller.js'][40] = 0;
  _$jscoverage['lib/controller.js'][41] = 0;
  _$jscoverage['lib/controller.js'][42] = 0;
  _$jscoverage['lib/controller.js'][43] = 0;
  _$jscoverage['lib/controller.js'][47] = 0;
  _$jscoverage['lib/controller.js'][50] = 0;
  _$jscoverage['lib/controller.js'][51] = 0;
  _$jscoverage['lib/controller.js'][54] = 0;
  _$jscoverage['lib/controller.js'][55] = 0;
  _$jscoverage['lib/controller.js'][56] = 0;
  _$jscoverage['lib/controller.js'][58] = 0;
  _$jscoverage['lib/controller.js'][59] = 0;
  _$jscoverage['lib/controller.js'][60] = 0;
  _$jscoverage['lib/controller.js'][63] = 0;
  _$jscoverage['lib/controller.js'][64] = 0;
  _$jscoverage['lib/controller.js'][67] = 0;
  _$jscoverage['lib/controller.js'][68] = 0;
  _$jscoverage['lib/controller.js'][73] = 0;
  _$jscoverage['lib/controller.js'][81] = 0;
}
_$jscoverage['lib/controller.js'][1]++;
include("../../vendor/ejs/ejs");
_$jscoverage['lib/controller.js'][3]++;
var Controller = new Class({Implements: [Options, Events], options: {binding: this, autoAttach: true, events: {initialized: function(controller) {
  _$jscoverage['lib/controller.js'][10]++;
  if (controller.options.autoAttach) {
    _$jscoverage['lib/controller.js'][11]++;
    controller.attachAll();
  }
}
}}, initialize: function(element, controls, options) {
  _$jscoverage['lib/controller.js'][17]++;
  this.setOptions(options);
  _$jscoverage['lib/controller.js'][18]++;
  this.element = element;
  _$jscoverage['lib/controller.js'][19]++;
  this.controls = $H(controls);
  _$jscoverage['lib/controller.js'][20]++;
  this.binding = this.options.binding;
  _$jscoverage['lib/controller.js'][21]++;
  this.added = new Hash();
  _$jscoverage['lib/controller.js'][22]++;
  this.addEvents(this.options.events);
  _$jscoverage['lib/controller.js'][23]++;
  this.fireEvent("initialized", this);
}
, attachAll: function(forceRebind) {
  _$jscoverage['lib/controller.js'][26]++;
  this.controls.each(function(v, k) {
  _$jscoverage['lib/controller.js'][27]++;
  var entry = this.controls.get(k);
  _$jscoverage['lib/controller.js'][28]++;
  if (entry && !entry.noauto) {
    _$jscoverage['lib/controller.js'][29]++;
    this.attach(k, forceRebind);
  }
}
, this);
}
, attach: function(selectorName, forceRebind) {
  _$jscoverage['lib/controller.js'][35]++;
  var elements;
  _$jscoverage['lib/controller.js'][36]++;
  this.controls.each(function(controls, selector) {
  _$jscoverage['lib/controller.js'][39]++;
  if (selectorName) {
    _$jscoverage['lib/controller.js'][40]++;
    selector = selector.clean();
    _$jscoverage['lib/controller.js'][41]++;
    selectorName = selectorName.clean();
    _$jscoverage['lib/controller.js'][42]++;
    if (selector.substr(0, selectorName.length) !== selectorName) {
      _$jscoverage['lib/controller.js'][43]++;
      return;
    }
  }
  _$jscoverage['lib/controller.js'][47]++;
  elements = this.element.getElements(selector);
  _$jscoverage['lib/controller.js'][50]++;
  if (elements.length === 0 && selector === "self") {
    _$jscoverage['lib/controller.js'][51]++;
    elements = [this.element];
  }
  _$jscoverage['lib/controller.js'][54]++;
  elements.each(function(elem) {
  _$jscoverage['lib/controller.js'][55]++;
  if (!this.added[elem]) {
    _$jscoverage['lib/controller.js'][56]++;
    this.added[elem] = [];
  }
  _$jscoverage['lib/controller.js'][58]++;
  $H(controls).each(function(fn, evName) {
  _$jscoverage['lib/controller.js'][59]++;
  if (this.added[elem].contains(evName) && !forceRebind) {
    _$jscoverage['lib/controller.js'][60]++;
    return;
  }
  else {
    _$jscoverage['lib/controller.js'][63]++;
    if (["noauto"].contains(evName)) {
      _$jscoverage['lib/controller.js'][64]++;
      return;
    }
    _$jscoverage['lib/controller.js'][67]++;
    elem.addEvent(evName, fn.bind(this.binding));
    _$jscoverage['lib/controller.js'][68]++;
    this.added[elem].push(evName);
  }
}
, this);
  _$jscoverage['lib/controller.js'][73]++;
  elem.fireEvent("controlsAdded", elem);
}
, this);
}
, this);
}
, renderView: function(name, data) {
  _$jscoverage['lib/controller.js'][81]++;
  return new EJS({url: "/app/views/" + name + ".ejs"}).render(data);
}
});
